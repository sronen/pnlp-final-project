demo()
DataAssociation_v6_All_Results_Clean <- read.delim("~/Documents/MIT/Research/MSR-Privacy/Results-20120828/DataAssociation_v6_All_Results_Clean.txt")
View(DataAssociation_v6_All_Results_Clean)
list(FACEBOOK_DATA.DOCS)
list(DataAssociation_v6_All_Results_Clean)
list?
list
View(DataAssociation_v6_All_Results_Clean)
DataAssociation_v6_All_Results_Clean.TURK_ID
help(list)
View(DataAssociation_v6_All_Results_Clean)
View(DataAssociation_v6_All_Results_Clean)
View(DataAssociation_v6_All_Results_Clean)
data <- read.delim("~/Documents/MIT/Research/MSR-Privacy/Results-20120828/data.txt")
View(data)
list(data)
list(data[1])
list(data[TURK_ID])
list(data.TURK_ID)
read.table("/Users/shahar/Documents/MIT/Research/MSR-Privacy/data.txt")
read.table("/Users/shahar/Documents/MIT/Research/MSR-Privacy/Results-20120828/data.txt")
read.table("clipboard")
read.table("clipboard")
data[1]
data[2]
data[3]
data[1
data[1]
data[1]
source('~/Documents/MIT/Research/LangGroupNetwork/Paper/Figures/Fig1-LinguisticExpression/Distribution.R')
v <- max(book_exp$TranslatedFrom)
v
hist(book_exp$TranslatedFrom)
h <- hist(book_exp$TranslatedFrom)
plot(h)
h <- hist(book_exp$TranslatedFrom, plot=F)
h
plot(
)
plot(h$counts, log="xy")
plot(h$counts+1, log="xy")
plot(h$count, log="y", type='h', lwd=10, lend=2)
plot(h$counts, log="y", type='h', lwd=10, lend=2)
h <- hist(log(book_exp$TranslatedFrom), plot=F)
hist(log(book_exp$TranslatedFrom), plot=T)
hist(log(book_exp$TranslatedFrom), plot=T, prob=F)
hist(log(book_exp$TranslatedFrom), plot=T, prob=T)
hist(log(twit_exp$NumOfExps), plot=T, prob=T)
hist(log(table(book_exp$TranslatedFrom), plot=T)
)
hist(log(table(book_exp$TranslatedFrom), plot=T)
hist(log(table(book_exp$TranslatedFrom), plot=T))
hist(table(log(book_exp$TranslatedFrom)), plot=T))
hist(table(log(book_exp$TranslatedFrom)), plot=T)
hist(table(book_exp$TranslatedFrom), plot=T)
hist(log(table(book_exp$TranslatedFrom), plot=T))
hist(log(twit_exp$NumOfExps), plot=T, prob=T)
hist(log(wiki_exp$NumOfExps), plot=T, prob=T)
hist(log(twit_exp$NumOfExps), plot=T, prob=T)
hist(log(wiki_exp$NumOfExps), plot=T, prob=T)
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, color="red")
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, fill="red")
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, col="red", alpha=0.2)
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, col="red"
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, col="red", axes=F)
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, col="red", axes=F) )
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, col="red", axes=F)
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, col="red", axes=F, ylab="Probability")
par(new=TRUE)
plot(c(1:num.langs.to.display),
lgn_giant_comp_sizes[1:num.langs.to.display]/141*100,
type="n",col="blue",xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("Percentage of largest component",side=4,line=3,cex=1.2)
?axis
setwd("en-topic-prop-names/")
getwd()
setwd("~/Development/pnlp-final-project/datasets/categories_2013-02-17")
setwd("en-topic-prop-names/")
fold1 <- read.csv("en-10-topic-prop-names.txt", sep='\t',header=TRUE,
row.names=1, check.names=FALSE) # read .csv file
fold2 <- read.csv("en-11-topic-prop-names.txt", sep='\t',header=TRUE,
row.names=1, check.names=FALSE) # read .csv file
fold3 <- read.csv("en-12-topic-prop-names.txt", sep='\t',header=TRUE,
row.names=1, check.names=FALSE) # read .csv file
View(fold3)
View(fold2)
View(fold1)
row.names(fold1)[1:10,]
row.names(fold1)[1:10]
row.names(fold2)[1:10]
row.names(fold3)[1:10]
?read.csv
fold1 <- read.csv("en-10-topic-prop-names.txt",
sep='\t',header=TRUE,na.strings = 0,
row.names=1, check.names=FALSE) # read .csv file
View(fold1)
fold1[is.na(fold1)] <- 0
View(fold1)
?rbinf
?rbind
run1 <- rbind(fold1, fold2, fold3)
View(run1)
row.names(run1)[20000:20005]
run1["Business",20000:20005]
run1$Business[20000:20005]
run1$Business[20000:20005, ]
run1$Business[20000:20005]
run1$Business[20:25]
load.fold <- function(filename) {
# Start a dataframe for results of given fold
my.fold <- read.csv(filename, sep='\t',header=TRUE,
row.names=1, check.names=FALSE) # read .csv file
my.fold[is.na(my.fold)] <- 0
return(my.fold)
}
fold.1 <- load.fold("en-10-topic-prop-names.txt")
fold.1 == fold1
if(fold.1 == fold1) {print("!")}
?compare
?sapply
data.frame.run <- function(filenames) {
a <- lapply(filenames, data.frame.fold)
}
data.frame.run <- function(filenames) {
return(lapply(filenames, data.frame.fold))
}
a <- data.frame.run(c("en-10-topic-prop-names.txt", "en-11-topic-prop-names.txt", "en-12-topic-prop-names.txt"))
data.frame.fold <- function(filename) {
# Start a dataframe for results of given fold, replace NA with 0
my.fold <- read.csv(filename, sep='\t',header=TRUE,
row.names=1, check.names=FALSE) # read .csv file
my.fold[is.na(my.fold)] <- 0
return(my.fold)
}
a <- data.frame.run(c("en-10-topic-prop-names.txt", "en-11-topic-prop-names.txt", "en-12-topic-prop-names.txt"))
fix(a)
data.frame.run <- function(filenames) {
a <- lapply(filenames, data.frame.fold)
return(rbind(a))
}
x <- data.frame.run(c("en-10-topic-prop-names.txt", "en-11-topic-prop-names.txt", "en-12-topic-prop-names.txt"))
View(x)
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
getwd()
setwd("~/Development/pnlp-final-project/datasets/categories_2013-02-17")
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
source('~/.active-rstudio-document')
fix(my.files)
my.files[1:3]
source('~/.active-rstudio-document')
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
fix(my.files)
my.files[1:3]
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
View(run1)
View(run2)
View(run3)
row.names(run1)[1:10]
row.names(run2)[1:10]
row.names(run3)[1:10]
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
View(fold1)
row.names(fold1)[1:10]
row.names(fold2)[1:10]
row.names(fold3)[1:10]
row.names(run1)[1:10]
row.names(run2)[1:10]
run2["Hal March", ]
run3["Hal March", ]
run1["Hal March", ]
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
View(fold1)
View(fold2)
View(fold3)
View(run1)
fix(my.files)
fold11 <- data.frame.fold(my.files[1])
fold21 <- data.frame.fold(my.files[4])
row.names(fold11)[1:10]
row.names(fold21)[1:10]
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(run1)
run1[1:10,]
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
run1[1:10,]
?order
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
run1[1:10,]
source('~/.active-rstudio-document')
run1[1:10,]
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
row.names(run1)[1:10]
row.names(run2)[1:10]
row.names(run3)[1:10]
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
row.names(run1)[1:10]
row.names(run2)[1:10]
row.names(run3)[1:10]
?rbind
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
filenames <- my.files
fold1 <- data.frame.fold(filenames[1])
fold2 <- data.frame.fold(filenames[2])
# remove duplicates, because apparently we have them!
duprows <- rownames(fold1) %in% rownames(fold2)
my.run <- rbind(fold1, fold2[!duprows,])
fold1 <- data.frame.fold(filenames[1])
fold2 <- data.frame.fold(filenames[2])
duprows <- rownames(fold2) %in% rownames(fold1)
my.run <- rbind(fold1, fold2[!duprows,])
fold3 <<- data.frame.fold(filenames[3])
# and again...
duprows <- rownames(fold3) %in% rownames(my.run)
my.run <- rbind(my.run, fold3[!duprows,])
run2 <- data.frame.run(my.files[4:6])
run1 <- data.frame.run(my.files[1:3])
source('~/.active-rstudio-document')
run3 <- data.frame.run(my.files[7:9])
library(compare)
?compare
comparison <- compare(run1,run2,allowAll=TRUE)
fix(comparison)
comparison <- compare(run1,run2)
common <- run1[rownames(run1) %in% rownames(run2), ]
common2 <- common[rownames(common) %in% rownames(run3), ]
