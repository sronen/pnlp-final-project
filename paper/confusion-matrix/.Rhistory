demo()
DataAssociation_v6_All_Results_Clean <- read.delim("~/Documents/MIT/Research/MSR-Privacy/Results-20120828/DataAssociation_v6_All_Results_Clean.txt")
View(DataAssociation_v6_All_Results_Clean)
list(FACEBOOK_DATA.DOCS)
list(DataAssociation_v6_All_Results_Clean)
list?
list
View(DataAssociation_v6_All_Results_Clean)
DataAssociation_v6_All_Results_Clean.TURK_ID
help(list)
View(DataAssociation_v6_All_Results_Clean)
View(DataAssociation_v6_All_Results_Clean)
View(DataAssociation_v6_All_Results_Clean)
data <- read.delim("~/Documents/MIT/Research/MSR-Privacy/Results-20120828/data.txt")
View(data)
list(data)
list(data[1])
list(data[TURK_ID])
list(data.TURK_ID)
read.table("/Users/shahar/Documents/MIT/Research/MSR-Privacy/data.txt")
read.table("/Users/shahar/Documents/MIT/Research/MSR-Privacy/Results-20120828/data.txt")
read.table("clipboard")
read.table("clipboard")
data[1]
data[2]
data[3]
data[1
data[1]
data[1]
source('~/Documents/MIT/Research/LangGroupNetwork/Paper/Figures/Fig1-LinguisticExpression/Distribution.R')
v <- max(book_exp$TranslatedFrom)
v
hist(book_exp$TranslatedFrom)
h <- hist(book_exp$TranslatedFrom)
plot(h)
h <- hist(book_exp$TranslatedFrom, plot=F)
h
plot(
)
plot(h$counts, log="xy")
plot(h$counts+1, log="xy")
plot(h$count, log="y", type='h', lwd=10, lend=2)
plot(h$counts, log="y", type='h', lwd=10, lend=2)
h <- hist(log(book_exp$TranslatedFrom), plot=F)
hist(log(book_exp$TranslatedFrom), plot=T)
hist(log(book_exp$TranslatedFrom), plot=T, prob=F)
hist(log(book_exp$TranslatedFrom), plot=T, prob=T)
hist(log(twit_exp$NumOfExps), plot=T, prob=T)
hist(log(table(book_exp$TranslatedFrom), plot=T)
)
hist(log(table(book_exp$TranslatedFrom), plot=T)
hist(log(table(book_exp$TranslatedFrom), plot=T))
hist(table(log(book_exp$TranslatedFrom)), plot=T))
hist(table(log(book_exp$TranslatedFrom)), plot=T)
hist(table(book_exp$TranslatedFrom), plot=T)
hist(log(table(book_exp$TranslatedFrom), plot=T))
hist(log(twit_exp$NumOfExps), plot=T, prob=T)
hist(log(wiki_exp$NumOfExps), plot=T, prob=T)
hist(log(twit_exp$NumOfExps), plot=T, prob=T)
hist(log(wiki_exp$NumOfExps), plot=T, prob=T)
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, color="red")
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, fill="red")
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, col="red", alpha=0.2)
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, col="red"
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, col="red", axes=F)
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, col="red", axes=F) )
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, col="red", axes=F)
hist(log(wiki_exp$NumOfExps), plot=T, prob=T, col="red", axes=F, ylab="Probability")
par(new=TRUE)
plot(c(1:num.langs.to.display),
lgn_giant_comp_sizes[1:num.langs.to.display]/141*100,
type="n",col="blue",xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("Percentage of largest component",side=4,line=3,cex=1.2)
?axis
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
setwd("~/Development/pnlp-final-project/datasets/categories_2013-02-17")
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
source('~/.active-rstudio-document')
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/merge_runs.R')
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/topics_for_most_viewed.R')
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/topics_for_most_viewed.R')
res <- round(topics.table[rownames(topics.table) %in% top.ten.list,]*100, 1)
topics.table <- eng.final
res <- round(topics.table[rownames(topics.table) %in% top.ten.list,]*100, 1)
top.ten.list <- ENG.TOP.TEN
res <- round(topics.table[rownames(topics.table) %in% top.ten.list,]*100, 1)
View(res)
rownames(res)
"Nicki Minaj", "Justin Bieber", "Adele (singer)",
ENG.TOP.TEN <- c("Whitney Houston", "Barack Obama", "Mitt Romney",
"Nicki Minaj", "Justin Bieber", "Adele (singer)",
"Eminem", "Rihanna", "Adolf Hitler", "Lionel Messi"
)
topics.table <- eng.final
top.ten.list <- ENG.TOP.TEN
res <- round(topics.table[rownames(topics.table) %in% top.ten.list,]*100, 1)
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/topics_for_most_viewed.R')
source('~/Development/pnlp-final-project/datasets/categories_2013-02-17/topics_for_most_viewed.R')
View(res)
View(res)
rm(reS)
rm(res)
fix(SPA.TOP.TEN)
source('~/Development/pnlp-final-project/paper/fig1-network/network.R')
setwd("~/Development/pnlp-final-project/paper/fig1-network")
source('~/Development/pnlp-final-project/paper/fig1-network/network.R')
source('~/Development/pnlp-final-project/paper/fig1-network/network.R')
dev.off()
dev.off()
source('~/Development/pnlp-final-project/paper/fig1-network/network.R')
source('~/Development/pnlp-final-project/paper/fig1-network/network.R')
source('~/Development/pnlp-final-project/paper/fig1-network/network.R')
source('~/Development/pnlp-final-project/paper/fig1-network/network.R')
source('~/Development/pnlp-final-project/paper/fig1-network/network.R')
source('~/Development/pnlp-final-project/paper/fig1-network/network.R')
setwd("~/Development/pnlp-final-project/paper/fig2-avg-topic-comp")
source('~/Development/pnlp-final-project/paper/fig2-avg-topic-comp/Average_topic_composition_by_language2.R')
source('~/Development/pnlp-final-project/paper/fig2-avg-topic-comp/Average_topic_composition_by_language2.R')
source('~/Development/pnlp-final-project/paper/fig2-avg-topic-comp/Average_topic_composition_by_language2.R')
source('~/.active-rstudio-document')
source('~/Development/pnlp-final-project/paper/fig2-avg-topic-comp/Average_topic_composition_by_language2.R')
source('~/Development/pnlp-final-project/paper/fig2-avg-topic-comp/Average_topic_composition_by_language2.R')
source('~/Development/pnlp-final-project/paper/fig2-avg-topic-comp/Average_topic_composition_by_language2.R')
dev.off()
dev.off()
source('~/Development/pnlp-final-project/paper/fig2-avg-topic-comp/Average_topic_composition_by_language2.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
setwd("~/Development/pnlp-final-project/paper/table-evaluation")
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
fa.identified.topic.shares <- all.topic.shares[rownames(all.topic.shares) %in% rownames(fa.expected.cats),]
fa.identified.topic.shares[1:10]
rownames(fa.identified.topic.shares)[1:10]
rownames(fa.identified.topic.shares[1:10])
View(all.topic.shares)
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
fa.category.comparison <- cbind(fa.expected.cats, fa.obserfa.identified.catsved.cats)
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
?with
fa.expected.cats <- with(fa.expected.cats, rownames() %in% rownames(fa.identified.cats)
fa.expected.cats <- with(fa.expected.cats, rownames() %in% rownames(fa.identified.cats))
fa.expected.cats <- fa.expected.cats[rownames(fa.expected.cats)
%in% rownames(fa.identified.cats), ]
fa.expected.cats[1:10]
rownames(fa.expected.cats)
fa.expected.cats[rownames(fa.expected.cats) %in% rownames(fa.identified.cats), ]
fa.identified.topic.shares <- all.topic.shares[rownames(all.topic.shares) %in% rownames(fa.expected.cats),]
View(fa.identified.topic.shares)
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
View(fa.category.comparison)
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
fa.expected.cats <<- load.featured.article.categories(fa.list.file)
fa.expected.cats <<- load.featured.article.categories(ENG.FA.LIST)
fa.expected.cats <<- fa.expected.cats[rownames(fa.expected.cats)
%in% rownames(fa.identified.cats), ]
fa.expected.cats <<- load.featured.article.categories(ENG.FA.LIST)
mrg <- merge(fa.expected.cats, fa.identified.cats)
?merge
mrg <- merge(fa.expected.cats, fa.identified.cats, by=0)
View(mrg)
mrg <- merge(fa.expected.cats, fa.identified.cats, by=0, row.names=0)
mrg <- merge(fa.expected.cats, fa.identified.cats, by=0, rownames=0)
mrg <- merge(fa.expected.cats, fa.identified.cats, by=row.names)
mrg <- merge(fa.expected.cats, fa.identified.cats, by=rownames)
mrg <- merge(fa.expected.cats, fa.identified.cats, by=0, names=c("DSF", "DFDSF"))
View(mrg)
mrg <- merge(fa.expected.cats, fa.identified.cats, by=0, row.names=0)
mrg <- merge(fa.expected.cats, fa.identified.cats, by=0)
rownames(mrg)=mrg$Row.names
mrg$Row.names <- NULL
print mrg[1:10,]
print(mrg[1:10,])
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
View(com.df)
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
View(com.df)
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/.active-rstudio-document')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
com.df <- generate.comparison.df(ENG.FA.LIST, ENG.TOPICS.FILE)
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
View(actual)
data <- data.frame(sample(LETTERS[0:20], 100, replace=T),sample(LETTERS[0:20], 100, replace=T))
names(data) <- c("Actual","Predicted")
View(data)
actual <- as.data.frame(table(data$Actual))
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
data <- generate.comparison.df(ENG.FA.LIST, ENG.TOPICS.FILE)
actual <- as.data.frame(table(data$Actual))
View(actual)
View(confusion)
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
View(confusion)
source('~/.active-rstudio-document')
View(confusion)
View(data)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
source('~/.active-rstudio-document')
View(actual)
View(actual1)
View(actual)
View(actual1)
View(data)
View(actual)
View(confusion1)
#render plot
# we use three different layers
# first we draw tiles and fill color based on percentage of test cases
tile <- ggplot() +
geom_tile(aes(x=Actual, y=Predicted,fill=Percent),data=confusion1, color="black",size=0.1) +
labs(x="Actual",y="Predicted")
print(tile)
# next we render text values. If you only want to indicate values greater than zero then use data=subset(confusion, Percent > 0)
tile <- tile +
geom_text(aes(x=Actual,y=Predicted, label=sprintf("%.1f", Percent)),data=confusion1, size=3, colour="black") +
scale_fill_gradient(low="grey",high="red")
# lastly we draw diagonal tiles. We use alpha = 0 so as not to hide previous layers but use size=0.3 to highlight border
tile <- tile +
geom_tile(aes(x=Actual,y=Predicted),data=subset(confusion1, as.character(Actual)==as.character(Predicted)), color="black",size=0.3, fill="black", alpha=0)
#render
print(tile)
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
tile <- ggplot() +
geom_tile(aes(x=Actual, y=Predicted,fill=Percent),data=confusion1, color="black",size=0.1) +
labs(x="Actual",y="Predicted")
print(tile)
# next we render text values. If you only want to indicate values greater than zero then use data=subset(confusion, Percent > 0)
tile <- tile +
geom_text(aes(x=Actual,y=Predicted, label=sprintf("%.1f", Percent)),data=confusion1, size=3, colour="black") +
scale_fill_gradient(low="grey",high="red")
print(tile)
tile <- tile +
geom_tile(aes(x=Actual,y=Predicted),data=subset(confusion1, as.character(Actual)==as.character(Predicted)), color="black",size=0.3, fill="black", alpha=0)
#render
print(tile)
source('~/Development/pnlp-final-project/paper/fig2-avg-topic-comp/Average_topic_composition_by_language2.R')
dev.off()
source('~/Development/pnlp-final-project/paper/fig2-avg-topic-comp/Average_topic_composition_by_language2.R')
source('~/Development/pnlp-final-project/paper/fig2-avg-topic-comp/Average_topic_composition_by_language2.R')
source('~/.active-rstudio-document')
getwd()
load.category.mapping <- function(mapping.file) {
# Load file that converts Wikipedia category to our matching categories
mapping <- read.csv(mapping.file,
sep='\t',header=TRUE,quote="",
row.names=1, check.names=FALSE)
}
mp <- load.category.mapping(MAPPING.FILE)
mp <- load.category.mapping(MAPPING.TABLE)
MAPPING.TABLE <- "category_mapping.tsv"
mp <- load.category.mapping(MAPPING.TABLE)
View(mp)
print(map)
print(mp)
View(comp.data)
wiki.categories <- comp.data$Actual
wiki.categories[1:10]
the.map <- read.csv(MAPPING.TABLE,
sep='\t',header=TRUE,quote="",
row.names=1, check.names=FALSE)
View(the.map)
mapped.categories <- the.map[[wiki.categories]]
the.map[[1]]
the.map[1]
the.map[1,]
the.map[[1]]
?match
blah <- wiki.categories[match(the.map, wiki.categories)]
fix(blah)
blah <- comp.data[match(the.map, comp.data$Actual)]
blah <- comp.data[match(row.names(the.map), comp.data$Actual)]
View(the.map)
blah <- the.map[match(wiki.categories, the.map),]
blah <- the.map[match(wiki.categories, the.map),"Our_Topic"]
blah[1:10]
wiki.categories[1:10]
blah <- the.map[match(wiki.categories, the.map),"Our_Topic"]
blah <- the.map[match(wiki.categories, the.map),]
blah <- the.map[match(wiki.categories, the.map),"Our_Topic"]
blah = the.map[match(wiki.categories, rownames(the.map),"Our_Topic"]
blah = the.map[match(wiki.categories, rownames(the.map)),"Our_Topic"]
blah
blah = the.map[match(as.data.frame(wiki.categories), rownames(the.map)),"Our_Topic"]
blah
blah = the.map[match(wiki.categories, rownames(the.map)),the.map$Our_Topic]
blah = the.map[match(wiki.categories, row.names(the.map)),the.map$Our_Topic]
wiki.categories[1:10]
blah <- the.map[match(comp.data$Actual, row.names(the.map)),the.map$Our_Topic]
View(comp.data)
row.names(the.map)
blah <- match(comp.data$Actual, row.names(the.map))
blah
comp.data$Actual[1:10]
View(comp.data)
blah <- match(comp.data$Actual[1:10], row.names(the.map)[1:10])
blah
comp.data$Actual[1:10]
a1 <- c(1,2,3,4,5)
a2 <- c(1,2,1,1,1)
a1 %in% a2
match(a1, a2)
a2 <- data.frame(c(1,2,3,4), c("a","b","c","d"))
a2
names(a2) <- c("num", "char")
a3
a2
match(1, a2)
match(1, a2$num)
match("c", a2$char)
[match("c", a2$char),"num"]
a2[match("c", a2$char),"num"]
a2[1,1]
a2[1,1] <- 10
a2[2,1] <- 20
a2[1]
a2[1] <- a2[1]*5
a2
a2[match("c", a2$char),"num"]
a2[match(c("c","b"), a2$char),"num"]
a2[match(c("c","b","x"), a2$char),"num"]
the.map
print(the.map)
a2[match(c("c","b","x"), a2$char),"num"]
the.map[match(c("Historia","Deportes"), row.names(the.map)),"Our_Topic"]
the.map[match(wiki.categories[1], row.names(the.map)),"Our_Topic"]
the.map[match(wiki.categories[1], row.names(the.map)),"Our_Topic"]
wiki.categories[1]
the.map[match(wiki.categories[1,], row.names(the.map)),"Our_Topic"]
the.map[match("Music", row.names(the.map)),"Our_Topic"]
the.map[match(c("Music"), row.names(the.map)),"Our_Topic"]
the.map[match(c("Musica"), row.names(the.map)),"Our_Topic"]
the.map[match(c("Mu'sica"), row.names(the.map)),"Our_Topic"]
the.map[match(c("Music"), row.names(the.map)),"Our_Topic"]
the.map[match(c("Music"), row.names(the.map)),"Our_Topic"]=="Music"
the.map[match(comp.data$Actual, row.names(the.map)),"Our_Topic"]=="Music"
comp.data[1]
comp.data[1][1]
comp.data[[1]
]
comp.data[[1,1]
]
comp.data[1,1]
the.map[match(comp.data[1,1], row.names(the.map)),"Our_Topic"]=="Music"
the.map[match(comp.data[1,1], row.names(the.map)),"Our_Topic"]
comp.data[1,1]=="Music"
comp.data[1,1]
comp.data$Actual[1]
comp.data$Actual[1]=="Music"
map.wiki.cats.to.ours <- function(mapping.file, wiki.categories) {
# Load file that converts Wikipedia category to our matching categories
the.map <- read.csv(mapping.file,
sep='\t',header=TRUE,quote="",
row.names=1, check.names=FALSE)
}
the.map <- map.wiki.cats.to.ours(MAPPING.TABLE,wiki.categories)
the.map
s.to.ours <- function(mapping.file, wiki.categories) {
# Load file that converts Wikipedia category to our matching categories
the.map <- read.csv(mapping.file,
sep='\t',header=TRUE,quote="",
row.names=1, check.names=FALSE)
return(the.map)
}
map.wiki.cats.to.ours <- function(mapping.file, wiki.categories) {
# Load file that converts Wikipedia category to our matching categories
the.map <- read.csv(mapping.file,
sep='\t',header=TRUE,quote="",
row.names=1, check.names=FALSE)
return(the.map)
}
rm(s.to.ours)
the.map <- map.wiki.cats.to.ours(MAPPING.TABLE,wiki.categories)
MAPPING.TABLE <- "category_mapping.tsv"
the.map <- map.wiki.cats.to.ours(MAPPING.TABLE,wiki.categories)
View(the.map)
"Music"==the.map[1,1]
"Art"==the.map[1,1]
match("Music", the.map)
match("Music", the.map$Our_Topic)
source('~/Development/pnlp-final-project/paper/table-evaluation/evaluation.R')
the.map[match("Music", the.map$Our_Topic),1]
the.map[match("Music", the.map$Our_Topic),2]
the.map[match("Music", the.map$Our_Topic),"Our_Topic"]
the.map[match("Desportes", the.map$Our_Topic),"Our_Topic"]
the.map[match("Deportes", the.map$Our_Topic),"Our_Topic"]
View(the.map)
the.map[match("Deportes", row.names(the.map)),"Our_Topic"]
the.map[match("Deportes", row.names(the.map)),"Our_Topic"]=="Sports"
the.map[match("Deportes", row.names(the.map)),"Our_Topic"]
comp.data$Actual[1]
comp.data$Actual[2]
comp.data$Actual[3]
comp.data$Actual[4]
comp.data$Actual[5]
the.map[match(comp.data$Actual[5], row.names(the.map)),"Our_Topic"]
the.map[match(comp.data$Actual[5], row.names(the.map)),"Our_Topic"]
row.names(the.map)
the.map <- read.csv(MAPPING.TABLE,
sep='\t',header=TRUE,quote="",
row.names=1, check.names=FALSE)
the.map
the.map[match(comp.data$Actual[5], row.names(the.map)),"Our_Topic"]
the.map[match("Law", row.names(the.map)),"Our_Topic"]
the.map[match(, row.names(the.map)),"Our_Topic"]
comp.data$Actual[5]
comp.data$Actual[5]="Literature and theatre"
comp.data$Actual[5]=="Literature and theatre"
type(comp.data$Actual[5])
class(comp.data)
class(comp.data$Actual)
class(comp.data$Actual[5])
com.data$Actual
comp.data$Actual
comp.data$Actual[5]
View(comp.data)
comp.data$Actual[5] <- "Literature and theatre"
comp.data[1,5] <- "Literature and theatre"
comp.data[1,5]
comp.data[1,6]
View(comp.data)
comp.data[1]
comp.data[1,2
]
comp.data[1,2]
comp.data[1,5]
comp.data[1,5] <- "Literature and theatre"
comp.data
